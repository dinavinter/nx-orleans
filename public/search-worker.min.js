import { b as W, d as D } from './chunk-P42HNYSU.min.js';
var ee = W((Z, Y) => {
  (function () {
    var t = function (e) {
      var r = new t.Builder();
      return (
        r.pipeline.add(t.trimmer, t.stopWordFilter, t.stemmer),
        r.searchPipeline.add(t.stemmer),
        e.call(r, r),
        r.build()
      );
    };
    t.version = '2.3.9';
    (t.utils = {}),
      (t.utils.warn = (function (e) {
        return function (r) {
          e.console && console.warn && console.warn(r);
        };
      })(this)),
      (t.utils.asString = function (e) {
        return e == null ? '' : e.toString();
      }),
      (t.utils.clone = function (e) {
        if (e == null) return e;
        for (
          var r = Object.create(null), n = Object.keys(e), i = 0;
          i < n.length;
          i++
        ) {
          var s = n[i],
            o = e[s];
          if (Array.isArray(o)) {
            r[s] = o.slice();
            continue;
          }
          if (
            typeof o == 'string' ||
            typeof o == 'number' ||
            typeof o == 'boolean'
          ) {
            r[s] = o;
            continue;
          }
          throw new TypeError(
            'clone is not deep and does not support nested objects'
          );
        }
        return r;
      }),
      (t.FieldRef = function (e, r, n) {
        (this.docRef = e), (this.fieldName = r), (this._stringValue = n);
      }),
      (t.FieldRef.joiner = '/'),
      (t.FieldRef.fromString = function (e) {
        var r = e.indexOf(t.FieldRef.joiner);
        if (r === -1) throw 'malformed field ref string';
        var n = e.slice(0, r),
          i = e.slice(r + 1);
        return new t.FieldRef(i, n, e);
      }),
      (t.FieldRef.prototype.toString = function () {
        return (
          this._stringValue == null &&
            (this._stringValue =
              this.fieldName + t.FieldRef.joiner + this.docRef),
          this._stringValue
        );
      });
    (t.Set = function (e) {
      if (((this.elements = Object.create(null)), e)) {
        this.length = e.length;
        for (var r = 0; r < this.length; r++) this.elements[e[r]] = !0;
      } else this.length = 0;
    }),
      (t.Set.complete = {
        intersect: function (e) {
          return e;
        },
        union: function () {
          return this;
        },
        contains: function () {
          return !0;
        },
      }),
      (t.Set.empty = {
        intersect: function () {
          return this;
        },
        union: function (e) {
          return e;
        },
        contains: function () {
          return !1;
        },
      }),
      (t.Set.prototype.contains = function (e) {
        return !!this.elements[e];
      }),
      (t.Set.prototype.intersect = function (e) {
        var r,
          n,
          i,
          s = [];
        if (e === t.Set.complete) return this;
        if (e === t.Set.empty) return e;
        this.length < e.length ? ((r = this), (n = e)) : ((r = e), (n = this)),
          (i = Object.keys(r.elements));
        for (var o = 0; o < i.length; o++) {
          var u = i[o];
          u in n.elements && s.push(u);
        }
        return new t.Set(s);
      }),
      (t.Set.prototype.union = function (e) {
        return e === t.Set.complete
          ? t.Set.complete
          : e === t.Set.empty
          ? this
          : new t.Set(
              Object.keys(this.elements).concat(Object.keys(e.elements))
            );
      }),
      (t.idf = function (e, r) {
        var n = 0;
        for (var i in e) i != '_index' && (n += Object.keys(e[i]).length);
        var s = (r - n + 0.5) / (n + 0.5);
        return Math.log(1 + Math.abs(s));
      }),
      (t.Token = function (e, r) {
        (this.str = e || ''), (this.metadata = r || {});
      }),
      (t.Token.prototype.toString = function () {
        return this.str;
      }),
      (t.Token.prototype.update = function (e) {
        return (this.str = e(this.str, this.metadata)), this;
      }),
      (t.Token.prototype.clone = function (e) {
        return (
          (e =
            e ||
            function (r) {
              return r;
            }),
          new t.Token(e(this.str, this.metadata), this.metadata)
        );
      });
    (t.tokenizer = function (e, r) {
      if (e == null || e == null) return [];
      if (Array.isArray(e))
        return e.map(function (d) {
          return new t.Token(
            t.utils.asString(d).toLowerCase(),
            t.utils.clone(r)
          );
        });
      for (
        var n = e.toString().toLowerCase(), i = n.length, s = [], o = 0, u = 0;
        o <= i;
        o++
      ) {
        var l = n.charAt(o),
          a = o - u;
        if (l.match(t.tokenizer.separator) || o == i) {
          if (a > 0) {
            var f = t.utils.clone(r) || {};
            (f.position = [u, a]),
              (f.index = s.length),
              s.push(new t.Token(n.slice(u, o), f));
          }
          u = o + 1;
        }
      }
      return s;
    }),
      (t.tokenizer.separator = /[\s\-]+/);
    (t.Pipeline = function () {
      this._stack = [];
    }),
      (t.Pipeline.registeredFunctions = Object.create(null)),
      (t.Pipeline.registerFunction = function (e, r) {
        r in this.registeredFunctions &&
          t.utils.warn('Overwriting existing registered function: ' + r),
          (e.label = r),
          (t.Pipeline.registeredFunctions[e.label] = e);
      }),
      (t.Pipeline.warnIfFunctionNotRegistered = function (e) {
        var r = e.label && e.label in this.registeredFunctions;
        r ||
          t.utils.warn(
            `Function is not registered with pipeline. This may cause problems when serialising the index.
`,
            e
          );
      }),
      (t.Pipeline.load = function (e) {
        var r = new t.Pipeline();
        return (
          e.forEach(function (n) {
            var i = t.Pipeline.registeredFunctions[n];
            if (i) r.add(i);
            else throw new Error('Cannot load unregistered function: ' + n);
          }),
          r
        );
      }),
      (t.Pipeline.prototype.add = function () {
        var e = Array.prototype.slice.call(arguments);
        e.forEach(function (r) {
          t.Pipeline.warnIfFunctionNotRegistered(r), this._stack.push(r);
        }, this);
      }),
      (t.Pipeline.prototype.after = function (e, r) {
        t.Pipeline.warnIfFunctionNotRegistered(r);
        var n = this._stack.indexOf(e);
        if (n == -1) throw new Error('Cannot find existingFn');
        (n = n + 1), this._stack.splice(n, 0, r);
      }),
      (t.Pipeline.prototype.before = function (e, r) {
        t.Pipeline.warnIfFunctionNotRegistered(r);
        var n = this._stack.indexOf(e);
        if (n == -1) throw new Error('Cannot find existingFn');
        this._stack.splice(n, 0, r);
      }),
      (t.Pipeline.prototype.remove = function (e) {
        var r = this._stack.indexOf(e);
        r != -1 && this._stack.splice(r, 1);
      }),
      (t.Pipeline.prototype.run = function (e) {
        for (var r = this._stack.length, n = 0; n < r; n++) {
          for (var i = this._stack[n], s = [], o = 0; o < e.length; o++) {
            var u = i(e[o], o, e);
            if (!(u == null || u === ''))
              if (Array.isArray(u))
                for (var l = 0; l < u.length; l++) s.push(u[l]);
              else s.push(u);
          }
          e = s;
        }
        return e;
      }),
      (t.Pipeline.prototype.runString = function (e, r) {
        var n = new t.Token(e, r);
        return this.run([n]).map(function (i) {
          return i.toString();
        });
      }),
      (t.Pipeline.prototype.reset = function () {
        this._stack = [];
      }),
      (t.Pipeline.prototype.toJSON = function () {
        return this._stack.map(function (e) {
          return t.Pipeline.warnIfFunctionNotRegistered(e), e.label;
        });
      });
    (t.Vector = function (e) {
      (this._magnitude = 0), (this.elements = e || []);
    }),
      (t.Vector.prototype.positionForIndex = function (e) {
        if (this.elements.length == 0) return 0;
        for (
          var r = 0,
            n = this.elements.length / 2,
            i = n - r,
            s = Math.floor(i / 2),
            o = this.elements[s * 2];
          i > 1 && (o < e && (r = s), o > e && (n = s), o != e);

        )
          (i = n - r), (s = r + Math.floor(i / 2)), (o = this.elements[s * 2]);
        if (o == e || o > e) return s * 2;
        if (o < e) return (s + 1) * 2;
      }),
      (t.Vector.prototype.insert = function (e, r) {
        this.upsert(e, r, function () {
          throw 'duplicate index';
        });
      }),
      (t.Vector.prototype.upsert = function (e, r, n) {
        this._magnitude = 0;
        var i = this.positionForIndex(e);
        this.elements[i] == e
          ? (this.elements[i + 1] = n(this.elements[i + 1], r))
          : this.elements.splice(i, 0, e, r);
      }),
      (t.Vector.prototype.magnitude = function () {
        if (this._magnitude) return this._magnitude;
        for (var e = 0, r = this.elements.length, n = 1; n < r; n += 2) {
          var i = this.elements[n];
          e += i * i;
        }
        return (this._magnitude = Math.sqrt(e));
      }),
      (t.Vector.prototype.dot = function (e) {
        for (
          var r = 0,
            n = this.elements,
            i = e.elements,
            s = n.length,
            o = i.length,
            u = 0,
            l = 0,
            a = 0,
            f = 0;
          a < s && f < o;

        )
          (u = n[a]),
            (l = i[f]),
            u < l
              ? (a += 2)
              : u > l
              ? (f += 2)
              : u == l && ((r += n[a + 1] * i[f + 1]), (a += 2), (f += 2));
        return r;
      }),
      (t.Vector.prototype.similarity = function (e) {
        return this.dot(e) / this.magnitude() || 0;
      }),
      (t.Vector.prototype.toArray = function () {
        for (
          var e = new Array(this.elements.length / 2), r = 1, n = 0;
          r < this.elements.length;
          r += 2, n++
        )
          e[n] = this.elements[r];
        return e;
      }),
      (t.Vector.prototype.toJSON = function () {
        return this.elements;
      });
    (t.stemmer = (function () {
      var e = {
          ational: 'ate',
          tional: 'tion',
          enci: 'ence',
          anci: 'ance',
          izer: 'ize',
          bli: 'ble',
          alli: 'al',
          entli: 'ent',
          eli: 'e',
          ousli: 'ous',
          ization: 'ize',
          ation: 'ate',
          ator: 'ate',
          alism: 'al',
          iveness: 'ive',
          fulness: 'ful',
          ousness: 'ous',
          aliti: 'al',
          iviti: 'ive',
          biliti: 'ble',
          logi: 'log',
        },
        r = {
          icate: 'ic',
          ative: '',
          alize: 'al',
          iciti: 'ic',
          ical: 'ic',
          ful: '',
          ness: '',
        },
        n = '[^aeiou]',
        i = '[aeiouy]',
        s = n + '[^aeiouy]*',
        o = i + '[aeiou]*',
        u = '^(' + s + ')?' + o + s,
        l = '^(' + s + ')?' + o + s + '(' + o + ')?$',
        a = '^(' + s + ')?' + o + s + o + s,
        f = '^(' + s + ')?' + i,
        d = new RegExp(u),
        h = new RegExp(a),
        g = new RegExp(l),
        p = new RegExp(f),
        m = /^(.+?)(ss|i)es$/,
        _ = /^(.+?)([^s])s$/,
        v = /^(.+?)eed$/,
        S = /^(.+?)(ed|ing)$/,
        x = /.$/,
        H = /(at|bl|iz)$/,
        I = new RegExp('([^aeiouylsz])\\1$'),
        B = new RegExp('^' + s + i + '[^aeiouwxy]$'),
        P = /^(.+?[^aeiou])y$/,
        T =
          /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,
        L = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,
        F =
          /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,
        N = /^(.+?)(s|t)(ion)$/,
        C = /^(.+?)e$/,
        j = /ll$/,
        U = new RegExp('^' + s + i + '[^aeiouwxy]$'),
        K = function (c) {
          var O, E, k, y, Q, A, M;
          if (c.length < 3) return c;
          if (
            ((k = c.substr(0, 1)),
            k == 'y' && (c = k.toUpperCase() + c.substr(1)),
            (y = m),
            (Q = _),
            y.test(c)
              ? (c = c.replace(y, '$1$2'))
              : Q.test(c) && (c = c.replace(Q, '$1$2')),
            (y = v),
            (Q = S),
            y.test(c))
          ) {
            var b = y.exec(c);
            (y = d), y.test(b[1]) && ((y = x), (c = c.replace(y, '')));
          } else if (Q.test(c)) {
            var b = Q.exec(c);
            (O = b[1]),
              (Q = p),
              Q.test(O) &&
                ((c = O),
                (Q = H),
                (A = I),
                (M = B),
                Q.test(c)
                  ? (c = c + 'e')
                  : A.test(c)
                  ? ((y = x), (c = c.replace(y, '')))
                  : M.test(c) && (c = c + 'e'));
          }
          if (((y = P), y.test(c))) {
            var b = y.exec(c);
            (O = b[1]), (c = O + 'i');
          }
          if (((y = T), y.test(c))) {
            var b = y.exec(c);
            (O = b[1]), (E = b[2]), (y = d), y.test(O) && (c = O + e[E]);
          }
          if (((y = L), y.test(c))) {
            var b = y.exec(c);
            (O = b[1]), (E = b[2]), (y = d), y.test(O) && (c = O + r[E]);
          }
          if (((y = F), (Q = N), y.test(c))) {
            var b = y.exec(c);
            (O = b[1]), (y = h), y.test(O) && (c = O);
          } else if (Q.test(c)) {
            var b = Q.exec(c);
            (O = b[1] + b[2]), (Q = h), Q.test(O) && (c = O);
          }
          if (((y = C), y.test(c))) {
            var b = y.exec(c);
            (O = b[1]),
              (y = h),
              (Q = g),
              (A = U),
              (y.test(O) || (Q.test(O) && !A.test(O))) && (c = O);
          }
          return (
            (y = j),
            (Q = h),
            y.test(c) && Q.test(c) && ((y = x), (c = c.replace(y, ''))),
            k == 'y' && (c = k.toLowerCase() + c.substr(1)),
            c
          );
        };
      return function (R) {
        return R.update(K);
      };
    })()),
      t.Pipeline.registerFunction(t.stemmer, 'stemmer');
    (t.generateStopWordFilter = function (e) {
      var r = e.reduce(function (n, i) {
        return (n[i] = i), n;
      }, {});
      return function (n) {
        if (n && r[n.toString()] !== n.toString()) return n;
      };
    }),
      (t.stopWordFilter = t.generateStopWordFilter([
        'a',
        'able',
        'about',
        'across',
        'after',
        'all',
        'almost',
        'also',
        'am',
        'among',
        'an',
        'and',
        'any',
        'are',
        'as',
        'at',
        'be',
        'because',
        'been',
        'but',
        'by',
        'can',
        'cannot',
        'could',
        'dear',
        'did',
        'do',
        'does',
        'either',
        'else',
        'ever',
        'every',
        'for',
        'from',
        'get',
        'got',
        'had',
        'has',
        'have',
        'he',
        'her',
        'hers',
        'him',
        'his',
        'how',
        'however',
        'i',
        'if',
        'in',
        'into',
        'is',
        'it',
        'its',
        'just',
        'least',
        'let',
        'like',
        'likely',
        'may',
        'me',
        'might',
        'most',
        'must',
        'my',
        'neither',
        'no',
        'nor',
        'not',
        'of',
        'off',
        'often',
        'on',
        'only',
        'or',
        'other',
        'our',
        'own',
        'rather',
        'said',
        'say',
        'says',
        'she',
        'should',
        'since',
        'so',
        'some',
        'than',
        'that',
        'the',
        'their',
        'them',
        'then',
        'there',
        'these',
        'they',
        'this',
        'tis',
        'to',
        'too',
        'twas',
        'us',
        'wants',
        'was',
        'we',
        'were',
        'what',
        'when',
        'where',
        'which',
        'while',
        'who',
        'whom',
        'why',
        'will',
        'with',
        'would',
        'yet',
        'you',
        'your',
      ])),
      t.Pipeline.registerFunction(t.stopWordFilter, 'stopWordFilter');
    (t.trimmer = function (e) {
      return e.update(function (r) {
        return r.replace(/^\W+/, '').replace(/\W+$/, '');
      });
    }),
      t.Pipeline.registerFunction(t.trimmer, 'trimmer');
    (t.TokenSet = function () {
      (this.final = !1),
        (this.edges = {}),
        (this.id = t.TokenSet._nextId),
        (t.TokenSet._nextId += 1);
    }),
      (t.TokenSet._nextId = 1),
      (t.TokenSet.fromArray = function (e) {
        for (var r = new t.TokenSet.Builder(), n = 0, i = e.length; n < i; n++)
          r.insert(e[n]);
        return r.finish(), r.root;
      }),
      (t.TokenSet.fromClause = function (e) {
        return 'editDistance' in e
          ? t.TokenSet.fromFuzzyString(e.term, e.editDistance)
          : t.TokenSet.fromString(e.term);
      }),
      (t.TokenSet.fromFuzzyString = function (e, r) {
        for (
          var n = new t.TokenSet(),
            i = [{ node: n, editsRemaining: r, str: e }];
          i.length;

        ) {
          var s = i.pop();
          if (s.str.length > 0) {
            var o = s.str.charAt(0),
              u;
            o in s.node.edges
              ? (u = s.node.edges[o])
              : ((u = new t.TokenSet()), (s.node.edges[o] = u)),
              s.str.length == 1 && (u.final = !0),
              i.push({
                node: u,
                editsRemaining: s.editsRemaining,
                str: s.str.slice(1),
              });
          }
          if (s.editsRemaining != 0) {
            if ('*' in s.node.edges) var l = s.node.edges['*'];
            else {
              var l = new t.TokenSet();
              s.node.edges['*'] = l;
            }
            if (
              (s.str.length == 0 && (l.final = !0),
              i.push({
                node: l,
                editsRemaining: s.editsRemaining - 1,
                str: s.str,
              }),
              s.str.length > 1 &&
                i.push({
                  node: s.node,
                  editsRemaining: s.editsRemaining - 1,
                  str: s.str.slice(1),
                }),
              s.str.length == 1 && (s.node.final = !0),
              s.str.length >= 1)
            ) {
              if ('*' in s.node.edges) var a = s.node.edges['*'];
              else {
                var a = new t.TokenSet();
                s.node.edges['*'] = a;
              }
              s.str.length == 1 && (a.final = !0),
                i.push({
                  node: a,
                  editsRemaining: s.editsRemaining - 1,
                  str: s.str.slice(1),
                });
            }
            if (s.str.length > 1) {
              var f = s.str.charAt(0),
                d = s.str.charAt(1),
                h;
              d in s.node.edges
                ? (h = s.node.edges[d])
                : ((h = new t.TokenSet()), (s.node.edges[d] = h)),
                s.str.length == 1 && (h.final = !0),
                i.push({
                  node: h,
                  editsRemaining: s.editsRemaining - 1,
                  str: f + s.str.slice(2),
                });
            }
          }
        }
        return n;
      }),
      (t.TokenSet.fromString = function (e) {
        for (var r = new t.TokenSet(), n = r, i = 0, s = e.length; i < s; i++) {
          var o = e[i],
            u = i == s - 1;
          if (o == '*') (r.edges[o] = r), (r.final = u);
          else {
            var l = new t.TokenSet();
            (l.final = u), (r.edges[o] = l), (r = l);
          }
        }
        return n;
      }),
      (t.TokenSet.prototype.toArray = function () {
        for (var e = [], r = [{ prefix: '', node: this }]; r.length; ) {
          var n = r.pop(),
            i = Object.keys(n.node.edges),
            s = i.length;
          n.node.final && (n.prefix.charAt(0), e.push(n.prefix));
          for (var o = 0; o < s; o++) {
            var u = i[o];
            r.push({ prefix: n.prefix.concat(u), node: n.node.edges[u] });
          }
        }
        return e;
      }),
      (t.TokenSet.prototype.toString = function () {
        if (this._str) return this._str;
        for (
          var e = this.final ? '1' : '0',
            r = Object.keys(this.edges).sort(),
            n = r.length,
            i = 0;
          i < n;
          i++
        ) {
          var s = r[i],
            o = this.edges[s];
          e = e + s + o.id;
        }
        return e;
      }),
      (t.TokenSet.prototype.intersect = function (e) {
        for (
          var r = new t.TokenSet(),
            n = void 0,
            i = [{ qNode: e, output: r, node: this }];
          i.length;

        ) {
          n = i.pop();
          for (
            var s = Object.keys(n.qNode.edges),
              o = s.length,
              u = Object.keys(n.node.edges),
              l = u.length,
              a = 0;
            a < o;
            a++
          )
            for (var f = s[a], d = 0; d < l; d++) {
              var h = u[d];
              if (h == f || f == '*') {
                var g = n.node.edges[h],
                  p = n.qNode.edges[f],
                  m = g.final && p.final,
                  _ = void 0;
                h in n.output.edges
                  ? ((_ = n.output.edges[h]), (_.final = _.final || m))
                  : ((_ = new t.TokenSet()),
                    (_.final = m),
                    (n.output.edges[h] = _)),
                  i.push({ qNode: p, output: _, node: g });
              }
            }
        }
        return r;
      }),
      (t.TokenSet.Builder = function () {
        (this.previousWord = ''),
          (this.root = new t.TokenSet()),
          (this.uncheckedNodes = []),
          (this.minimizedNodes = {});
      }),
      (t.TokenSet.Builder.prototype.insert = function (e) {
        var r,
          n = 0;
        if (e < this.previousWord)
          throw new Error('Out of order word insertion');
        for (
          var i = 0;
          i < e.length &&
          i < this.previousWord.length &&
          e[i] == this.previousWord[i];
          i++
        )
          n++;
        this.minimize(n),
          this.uncheckedNodes.length == 0
            ? (r = this.root)
            : (r = this.uncheckedNodes[this.uncheckedNodes.length - 1].child);
        for (var i = n; i < e.length; i++) {
          var s = new t.TokenSet(),
            o = e[i];
          (r.edges[o] = s),
            this.uncheckedNodes.push({ parent: r, char: o, child: s }),
            (r = s);
        }
        (r.final = !0), (this.previousWord = e);
      }),
      (t.TokenSet.Builder.prototype.finish = function () {
        this.minimize(0);
      }),
      (t.TokenSet.Builder.prototype.minimize = function (e) {
        for (var r = this.uncheckedNodes.length - 1; r >= e; r--) {
          var n = this.uncheckedNodes[r],
            i = n.child.toString();
          i in this.minimizedNodes
            ? (n.parent.edges[n.char] = this.minimizedNodes[i])
            : ((n.child._str = i), (this.minimizedNodes[i] = n.child)),
            this.uncheckedNodes.pop();
        }
      });
    (t.Index = function (e) {
      (this.invertedIndex = e.invertedIndex),
        (this.fieldVectors = e.fieldVectors),
        (this.tokenSet = e.tokenSet),
        (this.fields = e.fields),
        (this.pipeline = e.pipeline);
    }),
      (t.Index.prototype.search = function (e) {
        return this.query(function (r) {
          var n = new t.QueryParser(e, r);
          n.parse();
        });
      }),
      (t.Index.prototype.query = function (e) {
        for (
          var r = new t.Query(this.fields),
            n = Object.create(null),
            i = Object.create(null),
            s = Object.create(null),
            o = Object.create(null),
            u = Object.create(null),
            l = 0;
          l < this.fields.length;
          l++
        )
          i[this.fields[l]] = new t.Vector();
        e.call(r, r);
        for (var l = 0; l < r.clauses.length; l++) {
          var a = r.clauses[l],
            f = null,
            d = t.Set.empty;
          a.usePipeline
            ? (f = this.pipeline.runString(a.term, { fields: a.fields }))
            : (f = [a.term]);
          for (var h = 0; h < f.length; h++) {
            var g = f[h];
            a.term = g;
            var p = t.TokenSet.fromClause(a),
              m = this.tokenSet.intersect(p).toArray();
            if (m.length === 0 && a.presence === t.Query.presence.REQUIRED) {
              for (var _ = 0; _ < a.fields.length; _++) {
                var v = a.fields[_];
                o[v] = t.Set.empty;
              }
              break;
            }
            for (var S = 0; S < m.length; S++)
              for (
                var x = m[S], H = this.invertedIndex[x], I = H._index, _ = 0;
                _ < a.fields.length;
                _++
              ) {
                var v = a.fields[_],
                  B = H[v],
                  P = Object.keys(B),
                  T = x + '/' + v,
                  L = new t.Set(P);
                if (
                  (a.presence == t.Query.presence.REQUIRED &&
                    ((d = d.union(L)),
                    o[v] === void 0 && (o[v] = t.Set.complete)),
                  a.presence == t.Query.presence.PROHIBITED)
                ) {
                  u[v] === void 0 && (u[v] = t.Set.empty),
                    (u[v] = u[v].union(L));
                  continue;
                }
                if (
                  (i[v].upsert(I, a.boost, function (ye, _e) {
                    return ye + _e;
                  }),
                  !s[T])
                ) {
                  for (var F = 0; F < P.length; F++) {
                    var N = P[F],
                      C = new t.FieldRef(N, v),
                      j = B[N],
                      U;
                    (U = n[C]) === void 0
                      ? (n[C] = new t.MatchData(x, v, j))
                      : U.add(x, v, j);
                  }
                  s[T] = !0;
                }
              }
          }
          if (a.presence === t.Query.presence.REQUIRED)
            for (var _ = 0; _ < a.fields.length; _++) {
              var v = a.fields[_];
              o[v] = o[v].intersect(d);
            }
        }
        for (
          var K = t.Set.complete, R = t.Set.empty, l = 0;
          l < this.fields.length;
          l++
        ) {
          var v = this.fields[l];
          o[v] && (K = K.intersect(o[v])), u[v] && (R = R.union(u[v]));
        }
        var c = Object.keys(n),
          O = [],
          E = Object.create(null);
        if (r.isNegated()) {
          c = Object.keys(this.fieldVectors);
          for (var l = 0; l < c.length; l++) {
            var C = c[l],
              k = t.FieldRef.fromString(C);
            n[C] = new t.MatchData();
          }
        }
        for (var l = 0; l < c.length; l++) {
          var k = t.FieldRef.fromString(c[l]),
            y = k.docRef;
          if (K.contains(y) && !R.contains(y)) {
            var Q = this.fieldVectors[k],
              A = i[k.fieldName].similarity(Q),
              M;
            if ((M = E[y]) !== void 0)
              (M.score += A), M.matchData.combine(n[k]);
            else {
              var b = { ref: y, score: A, matchData: n[k] };
              (E[y] = b), O.push(b);
            }
          }
        }
        return O.sort(function (de, pe) {
          return pe.score - de.score;
        });
      }),
      (t.Index.prototype.toJSON = function () {
        var e = Object.keys(this.invertedIndex)
            .sort()
            .map(function (n) {
              return [n, this.invertedIndex[n]];
            }, this),
          r = Object.keys(this.fieldVectors).map(function (n) {
            return [n, this.fieldVectors[n].toJSON()];
          }, this);
        return {
          version: t.version,
          fields: this.fields,
          fieldVectors: r,
          invertedIndex: e,
          pipeline: this.pipeline.toJSON(),
        };
      }),
      (t.Index.load = function (e) {
        var r = {},
          n = {},
          i = e.fieldVectors,
          s = Object.create(null),
          o = e.invertedIndex,
          u = new t.TokenSet.Builder(),
          l = t.Pipeline.load(e.pipeline);
        e.version != t.version &&
          t.utils.warn(
            "Version mismatch when loading serialised index. Current version of lunr '" +
              t.version +
              "' does not match serialized index '" +
              e.version +
              "'"
          );
        for (var a = 0; a < i.length; a++) {
          var f = i[a],
            d = f[0],
            h = f[1];
          n[d] = new t.Vector(h);
        }
        for (var a = 0; a < o.length; a++) {
          var f = o[a],
            g = f[0],
            p = f[1];
          u.insert(g), (s[g] = p);
        }
        return (
          u.finish(),
          (r.fields = e.fields),
          (r.fieldVectors = n),
          (r.invertedIndex = s),
          (r.tokenSet = u.root),
          (r.pipeline = l),
          new t.Index(r)
        );
      });
    (t.Builder = function () {
      (this._ref = 'id'),
        (this._fields = Object.create(null)),
        (this._documents = Object.create(null)),
        (this.invertedIndex = Object.create(null)),
        (this.fieldTermFrequencies = {}),
        (this.fieldLengths = {}),
        (this.tokenizer = t.tokenizer),
        (this.pipeline = new t.Pipeline()),
        (this.searchPipeline = new t.Pipeline()),
        (this.documentCount = 0),
        (this._b = 0.75),
        (this._k1 = 1.2),
        (this.termIndex = 0),
        (this.metadataWhitelist = []);
    }),
      (t.Builder.prototype.ref = function (e) {
        this._ref = e;
      }),
      (t.Builder.prototype.field = function (e, r) {
        if (/\//.test(e))
          throw new RangeError(
            "Field '" + e + "' contains illegal character '/'"
          );
        this._fields[e] = r || {};
      }),
      (t.Builder.prototype.b = function (e) {
        e < 0 ? (this._b = 0) : e > 1 ? (this._b = 1) : (this._b = e);
      }),
      (t.Builder.prototype.k1 = function (e) {
        this._k1 = e;
      }),
      (t.Builder.prototype.add = function (e, r) {
        var n = e[this._ref],
          i = Object.keys(this._fields);
        (this._documents[n] = r || {}), (this.documentCount += 1);
        for (var s = 0; s < i.length; s++) {
          var o = i[s],
            u = this._fields[o].extractor,
            l = u ? u(e) : e[o],
            a = this.tokenizer(l, { fields: [o] }),
            f = this.pipeline.run(a),
            d = new t.FieldRef(n, o),
            h = Object.create(null);
          (this.fieldTermFrequencies[d] = h),
            (this.fieldLengths[d] = 0),
            (this.fieldLengths[d] += f.length);
          for (var g = 0; g < f.length; g++) {
            var p = f[g];
            if (
              (h[p] == null && (h[p] = 0),
              (h[p] += 1),
              this.invertedIndex[p] == null)
            ) {
              var m = Object.create(null);
              (m._index = this.termIndex), (this.termIndex += 1);
              for (var _ = 0; _ < i.length; _++) m[i[_]] = Object.create(null);
              this.invertedIndex[p] = m;
            }
            this.invertedIndex[p][o][n] == null &&
              (this.invertedIndex[p][o][n] = Object.create(null));
            for (var v = 0; v < this.metadataWhitelist.length; v++) {
              var S = this.metadataWhitelist[v],
                x = p.metadata[S];
              this.invertedIndex[p][o][n][S] == null &&
                (this.invertedIndex[p][o][n][S] = []),
                this.invertedIndex[p][o][n][S].push(x);
            }
          }
        }
      }),
      (t.Builder.prototype.calculateAverageFieldLengths = function () {
        for (
          var e = Object.keys(this.fieldLengths),
            r = e.length,
            n = {},
            i = {},
            s = 0;
          s < r;
          s++
        ) {
          var o = t.FieldRef.fromString(e[s]),
            u = o.fieldName;
          i[u] || (i[u] = 0),
            (i[u] += 1),
            n[u] || (n[u] = 0),
            (n[u] += this.fieldLengths[o]);
        }
        for (var l = Object.keys(this._fields), s = 0; s < l.length; s++) {
          var a = l[s];
          n[a] = n[a] / i[a];
        }
        this.averageFieldLength = n;
      }),
      (t.Builder.prototype.createFieldVectors = function () {
        for (
          var e = {},
            r = Object.keys(this.fieldTermFrequencies),
            n = r.length,
            i = Object.create(null),
            s = 0;
          s < n;
          s++
        ) {
          for (
            var o = t.FieldRef.fromString(r[s]),
              u = o.fieldName,
              l = this.fieldLengths[o],
              a = new t.Vector(),
              f = this.fieldTermFrequencies[o],
              d = Object.keys(f),
              h = d.length,
              g = this._fields[u].boost || 1,
              p = this._documents[o.docRef].boost || 1,
              m = 0;
            m < h;
            m++
          ) {
            var _ = d[m],
              v = f[_],
              S = this.invertedIndex[_]._index,
              x,
              H,
              I;
            i[_] === void 0
              ? ((x = t.idf(this.invertedIndex[_], this.documentCount)),
                (i[_] = x))
              : (x = i[_]),
              (H =
                (x * ((this._k1 + 1) * v)) /
                (this._k1 *
                  (1 - this._b + this._b * (l / this.averageFieldLength[u])) +
                  v)),
              (H *= g),
              (H *= p),
              (I = Math.round(H * 1e3) / 1e3),
              a.insert(S, I);
          }
          e[o] = a;
        }
        this.fieldVectors = e;
      }),
      (t.Builder.prototype.createTokenSet = function () {
        this.tokenSet = t.TokenSet.fromArray(
          Object.keys(this.invertedIndex).sort()
        );
      }),
      (t.Builder.prototype.build = function () {
        return (
          this.calculateAverageFieldLengths(),
          this.createFieldVectors(),
          this.createTokenSet(),
          new t.Index({
            invertedIndex: this.invertedIndex,
            fieldVectors: this.fieldVectors,
            tokenSet: this.tokenSet,
            fields: Object.keys(this._fields),
            pipeline: this.searchPipeline,
          })
        );
      }),
      (t.Builder.prototype.use = function (e) {
        var r = Array.prototype.slice.call(arguments, 1);
        r.unshift(this), e.apply(this, r);
      }),
      (t.MatchData = function (e, r, n) {
        for (
          var i = Object.create(null), s = Object.keys(n || {}), o = 0;
          o < s.length;
          o++
        ) {
          var u = s[o];
          i[u] = n[u].slice();
        }
        (this.metadata = Object.create(null)),
          e !== void 0 &&
            ((this.metadata[e] = Object.create(null)),
            (this.metadata[e][r] = i));
      }),
      (t.MatchData.prototype.combine = function (e) {
        for (var r = Object.keys(e.metadata), n = 0; n < r.length; n++) {
          var i = r[n],
            s = Object.keys(e.metadata[i]);
          this.metadata[i] == null && (this.metadata[i] = Object.create(null));
          for (var o = 0; o < s.length; o++) {
            var u = s[o],
              l = Object.keys(e.metadata[i][u]);
            this.metadata[i][u] == null &&
              (this.metadata[i][u] = Object.create(null));
            for (var a = 0; a < l.length; a++) {
              var f = l[a];
              this.metadata[i][u][f] == null
                ? (this.metadata[i][u][f] = e.metadata[i][u][f])
                : (this.metadata[i][u][f] = this.metadata[i][u][f].concat(
                    e.metadata[i][u][f]
                  ));
            }
          }
        }
      }),
      (t.MatchData.prototype.add = function (e, r, n) {
        if (!(e in this.metadata)) {
          (this.metadata[e] = Object.create(null)), (this.metadata[e][r] = n);
          return;
        }
        if (!(r in this.metadata[e])) {
          this.metadata[e][r] = n;
          return;
        }
        for (var i = Object.keys(n), s = 0; s < i.length; s++) {
          var o = i[s];
          o in this.metadata[e][r]
            ? (this.metadata[e][r][o] = this.metadata[e][r][o].concat(n[o]))
            : (this.metadata[e][r][o] = n[o]);
        }
      }),
      (t.Query = function (e) {
        (this.clauses = []), (this.allFields = e);
      }),
      (t.Query.wildcard = new String('*')),
      (t.Query.wildcard.NONE = 0),
      (t.Query.wildcard.LEADING = 1),
      (t.Query.wildcard.TRAILING = 2),
      (t.Query.presence = { OPTIONAL: 1, REQUIRED: 2, PROHIBITED: 3 }),
      (t.Query.prototype.clause = function (e) {
        return (
          'fields' in e || (e.fields = this.allFields),
          'boost' in e || (e.boost = 1),
          'usePipeline' in e || (e.usePipeline = !0),
          'wildcard' in e || (e.wildcard = t.Query.wildcard.NONE),
          e.wildcard & t.Query.wildcard.LEADING &&
            e.term.charAt(0) != t.Query.wildcard &&
            (e.term = '*' + e.term),
          e.wildcard & t.Query.wildcard.TRAILING &&
            e.term.slice(-1) != t.Query.wildcard &&
            (e.term = '' + e.term + '*'),
          'presence' in e || (e.presence = t.Query.presence.OPTIONAL),
          this.clauses.push(e),
          this
        );
      }),
      (t.Query.prototype.isNegated = function () {
        for (var e = 0; e < this.clauses.length; e++)
          if (this.clauses[e].presence != t.Query.presence.PROHIBITED)
            return !1;
        return !0;
      }),
      (t.Query.prototype.term = function (e, r) {
        if (Array.isArray(e))
          return (
            e.forEach(function (i) {
              this.term(i, t.utils.clone(r));
            }, this),
            this
          );
        var n = r || {};
        return (n.term = e.toString()), this.clause(n), this;
      }),
      (t.QueryParseError = function (e, r, n) {
        (this.name = 'QueryParseError'),
          (this.message = e),
          (this.start = r),
          (this.end = n);
      }),
      (t.QueryParseError.prototype = new Error()),
      (t.QueryLexer = function (e) {
        (this.lexemes = []),
          (this.str = e),
          (this.length = e.length),
          (this.pos = 0),
          (this.start = 0),
          (this.escapeCharPositions = []);
      }),
      (t.QueryLexer.prototype.run = function () {
        for (var e = t.QueryLexer.lexText; e; ) e = e(this);
      }),
      (t.QueryLexer.prototype.sliceString = function () {
        for (
          var e = [], r = this.start, n = this.pos, i = 0;
          i < this.escapeCharPositions.length;
          i++
        )
          (n = this.escapeCharPositions[i]),
            e.push(this.str.slice(r, n)),
            (r = n + 1);
        return (
          e.push(this.str.slice(r, this.pos)),
          (this.escapeCharPositions.length = 0),
          e.join('')
        );
      }),
      (t.QueryLexer.prototype.emit = function (e) {
        this.lexemes.push({
          type: e,
          str: this.sliceString(),
          start: this.start,
          end: this.pos,
        }),
          (this.start = this.pos);
      }),
      (t.QueryLexer.prototype.escapeCharacter = function () {
        this.escapeCharPositions.push(this.pos - 1), (this.pos += 1);
      }),
      (t.QueryLexer.prototype.next = function () {
        if (this.pos >= this.length) return t.QueryLexer.EOS;
        var e = this.str.charAt(this.pos);
        return (this.pos += 1), e;
      }),
      (t.QueryLexer.prototype.width = function () {
        return this.pos - this.start;
      }),
      (t.QueryLexer.prototype.ignore = function () {
        this.start == this.pos && (this.pos += 1), (this.start = this.pos);
      }),
      (t.QueryLexer.prototype.backup = function () {
        this.pos -= 1;
      }),
      (t.QueryLexer.prototype.acceptDigitRun = function () {
        var e, r;
        do (e = this.next()), (r = e.charCodeAt(0));
        while (r > 47 && r < 58);
        e != t.QueryLexer.EOS && this.backup();
      }),
      (t.QueryLexer.prototype.more = function () {
        return this.pos < this.length;
      }),
      (t.QueryLexer.EOS = 'EOS'),
      (t.QueryLexer.FIELD = 'FIELD'),
      (t.QueryLexer.TERM = 'TERM'),
      (t.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'),
      (t.QueryLexer.BOOST = 'BOOST'),
      (t.QueryLexer.PRESENCE = 'PRESENCE'),
      (t.QueryLexer.lexField = function (e) {
        return (
          e.backup(),
          e.emit(t.QueryLexer.FIELD),
          e.ignore(),
          t.QueryLexer.lexText
        );
      }),
      (t.QueryLexer.lexTerm = function (e) {
        if (
          (e.width() > 1 && (e.backup(), e.emit(t.QueryLexer.TERM)),
          e.ignore(),
          e.more())
        )
          return t.QueryLexer.lexText;
      }),
      (t.QueryLexer.lexEditDistance = function (e) {
        return (
          e.ignore(),
          e.acceptDigitRun(),
          e.emit(t.QueryLexer.EDIT_DISTANCE),
          t.QueryLexer.lexText
        );
      }),
      (t.QueryLexer.lexBoost = function (e) {
        return (
          e.ignore(),
          e.acceptDigitRun(),
          e.emit(t.QueryLexer.BOOST),
          t.QueryLexer.lexText
        );
      }),
      (t.QueryLexer.lexEOS = function (e) {
        e.width() > 0 && e.emit(t.QueryLexer.TERM);
      }),
      (t.QueryLexer.termSeparator = t.tokenizer.separator),
      (t.QueryLexer.lexText = function (e) {
        for (;;) {
          var r = e.next();
          if (r == t.QueryLexer.EOS) return t.QueryLexer.lexEOS;
          if (r.charCodeAt(0) == 92) {
            e.escapeCharacter();
            continue;
          }
          if (r == ':') return t.QueryLexer.lexField;
          if (r == '~')
            return (
              e.backup(),
              e.width() > 0 && e.emit(t.QueryLexer.TERM),
              t.QueryLexer.lexEditDistance
            );
          if (r == '^')
            return (
              e.backup(),
              e.width() > 0 && e.emit(t.QueryLexer.TERM),
              t.QueryLexer.lexBoost
            );
          if ((r == '+' && e.width() === 1) || (r == '-' && e.width() === 1))
            return e.emit(t.QueryLexer.PRESENCE), t.QueryLexer.lexText;
          if (r.match(t.QueryLexer.termSeparator)) return t.QueryLexer.lexTerm;
        }
      }),
      (t.QueryParser = function (e, r) {
        (this.lexer = new t.QueryLexer(e)),
          (this.query = r),
          (this.currentClause = {}),
          (this.lexemeIdx = 0);
      }),
      (t.QueryParser.prototype.parse = function () {
        this.lexer.run(), (this.lexemes = this.lexer.lexemes);
        for (var e = t.QueryParser.parseClause; e; ) e = e(this);
        return this.query;
      }),
      (t.QueryParser.prototype.peekLexeme = function () {
        return this.lexemes[this.lexemeIdx];
      }),
      (t.QueryParser.prototype.consumeLexeme = function () {
        var e = this.peekLexeme();
        return (this.lexemeIdx += 1), e;
      }),
      (t.QueryParser.prototype.nextClause = function () {
        var e = this.currentClause;
        this.query.clause(e), (this.currentClause = {});
      }),
      (t.QueryParser.parseClause = function (e) {
        var r = e.peekLexeme();
        if (r != null)
          switch (r.type) {
            case t.QueryLexer.PRESENCE:
              return t.QueryParser.parsePresence;
            case t.QueryLexer.FIELD:
              return t.QueryParser.parseField;
            case t.QueryLexer.TERM:
              return t.QueryParser.parseTerm;
            default:
              var n = 'expected either a field or a term, found ' + r.type;
              throw (
                (r.str.length >= 1 && (n += " with value '" + r.str + "'"),
                new t.QueryParseError(n, r.start, r.end))
              );
          }
      }),
      (t.QueryParser.parsePresence = function (e) {
        var r = e.consumeLexeme();
        if (r != null) {
          switch (r.str) {
            case '-':
              e.currentClause.presence = t.Query.presence.PROHIBITED;
              break;
            case '+':
              e.currentClause.presence = t.Query.presence.REQUIRED;
              break;
            default:
              var n = "unrecognised presence operator'" + r.str + "'";
              throw new t.QueryParseError(n, r.start, r.end);
          }
          var i = e.peekLexeme();
          if (i == null) {
            var n = 'expecting term or field, found nothing';
            throw new t.QueryParseError(n, r.start, r.end);
          }
          switch (i.type) {
            case t.QueryLexer.FIELD:
              return t.QueryParser.parseField;
            case t.QueryLexer.TERM:
              return t.QueryParser.parseTerm;
            default:
              var n = "expecting term or field, found '" + i.type + "'";
              throw new t.QueryParseError(n, i.start, i.end);
          }
        }
      }),
      (t.QueryParser.parseField = function (e) {
        var r = e.consumeLexeme();
        if (r != null) {
          if (e.query.allFields.indexOf(r.str) == -1) {
            var n = e.query.allFields
                .map(function (o) {
                  return "'" + o + "'";
                })
                .join(', '),
              i = "unrecognised field '" + r.str + "', possible fields: " + n;
            throw new t.QueryParseError(i, r.start, r.end);
          }
          e.currentClause.fields = [r.str];
          var s = e.peekLexeme();
          if (s == null) {
            var i = 'expecting term, found nothing';
            throw new t.QueryParseError(i, r.start, r.end);
          }
          switch (s.type) {
            case t.QueryLexer.TERM:
              return t.QueryParser.parseTerm;
            default:
              var i = "expecting term, found '" + s.type + "'";
              throw new t.QueryParseError(i, s.start, s.end);
          }
        }
      }),
      (t.QueryParser.parseTerm = function (e) {
        var r = e.consumeLexeme();
        if (r != null) {
          (e.currentClause.term = r.str.toLowerCase()),
            r.str.indexOf('*') != -1 && (e.currentClause.usePipeline = !1);
          var n = e.peekLexeme();
          if (n == null) {
            e.nextClause();
            return;
          }
          switch (n.type) {
            case t.QueryLexer.TERM:
              return e.nextClause(), t.QueryParser.parseTerm;
            case t.QueryLexer.FIELD:
              return e.nextClause(), t.QueryParser.parseField;
            case t.QueryLexer.EDIT_DISTANCE:
              return t.QueryParser.parseEditDistance;
            case t.QueryLexer.BOOST:
              return t.QueryParser.parseBoost;
            case t.QueryLexer.PRESENCE:
              return e.nextClause(), t.QueryParser.parsePresence;
            default:
              var i = "Unexpected lexeme type '" + n.type + "'";
              throw new t.QueryParseError(i, n.start, n.end);
          }
        }
      }),
      (t.QueryParser.parseEditDistance = function (e) {
        var r = e.consumeLexeme();
        if (r != null) {
          var n = parseInt(r.str, 10);
          if (isNaN(n)) {
            var i = 'edit distance must be numeric';
            throw new t.QueryParseError(i, r.start, r.end);
          }
          e.currentClause.editDistance = n;
          var s = e.peekLexeme();
          if (s == null) {
            e.nextClause();
            return;
          }
          switch (s.type) {
            case t.QueryLexer.TERM:
              return e.nextClause(), t.QueryParser.parseTerm;
            case t.QueryLexer.FIELD:
              return e.nextClause(), t.QueryParser.parseField;
            case t.QueryLexer.EDIT_DISTANCE:
              return t.QueryParser.parseEditDistance;
            case t.QueryLexer.BOOST:
              return t.QueryParser.parseBoost;
            case t.QueryLexer.PRESENCE:
              return e.nextClause(), t.QueryParser.parsePresence;
            default:
              var i = "Unexpected lexeme type '" + s.type + "'";
              throw new t.QueryParseError(i, s.start, s.end);
          }
        }
      }),
      (t.QueryParser.parseBoost = function (e) {
        var r = e.consumeLexeme();
        if (r != null) {
          var n = parseInt(r.str, 10);
          if (isNaN(n)) {
            var i = 'boost must be numeric';
            throw new t.QueryParseError(i, r.start, r.end);
          }
          e.currentClause.boost = n;
          var s = e.peekLexeme();
          if (s == null) {
            e.nextClause();
            return;
          }
          switch (s.type) {
            case t.QueryLexer.TERM:
              return e.nextClause(), t.QueryParser.parseTerm;
            case t.QueryLexer.FIELD:
              return e.nextClause(), t.QueryParser.parseField;
            case t.QueryLexer.EDIT_DISTANCE:
              return t.QueryParser.parseEditDistance;
            case t.QueryLexer.BOOST:
              return t.QueryParser.parseBoost;
            case t.QueryLexer.PRESENCE:
              return e.nextClause(), t.QueryParser.parsePresence;
            default:
              var i = "Unexpected lexeme type '" + s.type + "'";
              throw new t.QueryParseError(i, s.start, s.end);
          }
        }
      }),
      (function (e, r) {
        typeof define == 'function' && define.amd
          ? define(r)
          : typeof Z == 'object'
          ? (Y.exports = r())
          : (e.lunr = r());
      })(this, function () {
        return t;
      });
  })();
});
var re = W((V, te) => {
  (function (t, e) {
    typeof define == 'function' && define.amd
      ? define(e)
      : typeof V == 'object'
      ? (te.exports = e())
      : e()(t.lunr);
  })(V, function () {
    return function (t) {
      (t.stemmerSupport = {
        Among: function (e, r, n, i) {
          if (
            ((this.toCharArray = function (s) {
              for (var o = s.length, u = new Array(o), l = 0; l < o; l++)
                u[l] = s.charCodeAt(l);
              return u;
            }),
            (!e && e != '') || (!r && r != 0) || !n)
          )
            throw (
              'Bad Among initialisation: s:' +
              e +
              ', substring_i: ' +
              r +
              ', result: ' +
              n
            );
          (this.s_size = e.length),
            (this.s = this.toCharArray(e)),
            (this.substring_i = r),
            (this.result = n),
            (this.method = i);
        },
        SnowballProgram: function () {
          var e;
          return {
            bra: 0,
            ket: 0,
            limit: 0,
            cursor: 0,
            limit_backward: 0,
            setCurrent: function (r) {
              (e = r),
                (this.cursor = 0),
                (this.limit = r.length),
                (this.limit_backward = 0),
                (this.bra = this.cursor),
                (this.ket = this.limit);
            },
            getCurrent: function () {
              var r = e;
              return (e = null), r;
            },
            in_grouping: function (r, n, i) {
              if (this.cursor < this.limit) {
                var s = e.charCodeAt(this.cursor);
                if (s <= i && s >= n && ((s -= n), r[s >> 3] & (1 << (s & 7))))
                  return this.cursor++, !0;
              }
              return !1;
            },
            in_grouping_b: function (r, n, i) {
              if (this.cursor > this.limit_backward) {
                var s = e.charCodeAt(this.cursor - 1);
                if (s <= i && s >= n && ((s -= n), r[s >> 3] & (1 << (s & 7))))
                  return this.cursor--, !0;
              }
              return !1;
            },
            out_grouping: function (r, n, i) {
              if (this.cursor < this.limit) {
                var s = e.charCodeAt(this.cursor);
                if (s > i || s < n) return this.cursor++, !0;
                if (((s -= n), !(r[s >> 3] & (1 << (s & 7)))))
                  return this.cursor++, !0;
              }
              return !1;
            },
            out_grouping_b: function (r, n, i) {
              if (this.cursor > this.limit_backward) {
                var s = e.charCodeAt(this.cursor - 1);
                if (s > i || s < n) return this.cursor--, !0;
                if (((s -= n), !(r[s >> 3] & (1 << (s & 7)))))
                  return this.cursor--, !0;
              }
              return !1;
            },
            eq_s: function (r, n) {
              if (this.limit - this.cursor < r) return !1;
              for (var i = 0; i < r; i++)
                if (e.charCodeAt(this.cursor + i) != n.charCodeAt(i)) return !1;
              return (this.cursor += r), !0;
            },
            eq_s_b: function (r, n) {
              if (this.cursor - this.limit_backward < r) return !1;
              for (var i = 0; i < r; i++)
                if (e.charCodeAt(this.cursor - r + i) != n.charCodeAt(i))
                  return !1;
              return (this.cursor -= r), !0;
            },
            find_among: function (r, n) {
              for (
                var i = 0,
                  s = n,
                  o = this.cursor,
                  u = this.limit,
                  l = 0,
                  a = 0,
                  f = !1;
                ;

              ) {
                for (
                  var d = i + ((s - i) >> 1),
                    h = 0,
                    g = l < a ? l : a,
                    p = r[d],
                    m = g;
                  m < p.s_size;
                  m++
                ) {
                  if (o + g == u) {
                    h = -1;
                    break;
                  }
                  if (((h = e.charCodeAt(o + g) - p.s[m]), h)) break;
                  g++;
                }
                if (
                  (h < 0 ? ((s = d), (a = g)) : ((i = d), (l = g)), s - i <= 1)
                ) {
                  if (i > 0 || s == i || f) break;
                  f = !0;
                }
              }
              for (;;) {
                var p = r[i];
                if (l >= p.s_size) {
                  if (((this.cursor = o + p.s_size), !p.method))
                    return p.result;
                  var _ = p.method();
                  if (((this.cursor = o + p.s_size), _)) return p.result;
                }
                if (((i = p.substring_i), i < 0)) return 0;
              }
            },
            find_among_b: function (r, n) {
              for (
                var i = 0,
                  s = n,
                  o = this.cursor,
                  u = this.limit_backward,
                  l = 0,
                  a = 0,
                  f = !1;
                ;

              ) {
                for (
                  var d = i + ((s - i) >> 1),
                    h = 0,
                    g = l < a ? l : a,
                    p = r[d],
                    m = p.s_size - 1 - g;
                  m >= 0;
                  m--
                ) {
                  if (o - g == u) {
                    h = -1;
                    break;
                  }
                  if (((h = e.charCodeAt(o - 1 - g) - p.s[m]), h)) break;
                  g++;
                }
                if (
                  (h < 0 ? ((s = d), (a = g)) : ((i = d), (l = g)), s - i <= 1)
                ) {
                  if (i > 0 || s == i || f) break;
                  f = !0;
                }
              }
              for (;;) {
                var p = r[i];
                if (l >= p.s_size) {
                  if (((this.cursor = o - p.s_size), !p.method))
                    return p.result;
                  var _ = p.method();
                  if (((this.cursor = o - p.s_size), _)) return p.result;
                }
                if (((i = p.substring_i), i < 0)) return 0;
              }
            },
            replace_s: function (r, n, i) {
              var s = i.length - (n - r),
                o = e.substring(0, r),
                u = e.substring(n);
              return (
                (e = o + i + u),
                (this.limit += s),
                this.cursor >= n
                  ? (this.cursor += s)
                  : this.cursor > r && (this.cursor = r),
                s
              );
            },
            slice_check: function () {
              if (
                this.bra < 0 ||
                this.bra > this.ket ||
                this.ket > this.limit ||
                this.limit > e.length
              )
                throw 'faulty slice operation';
            },
            slice_from: function (r) {
              this.slice_check(), this.replace_s(this.bra, this.ket, r);
            },
            slice_del: function () {
              this.slice_from('');
            },
            insert: function (r, n, i) {
              var s = this.replace_s(r, n, i);
              r <= this.bra && (this.bra += s),
                r <= this.ket && (this.ket += s);
            },
            slice_to: function () {
              return this.slice_check(), e.substring(this.bra, this.ket);
            },
            eq_v_b: function (r) {
              return this.eq_s_b(r.length, r);
            },
          };
        },
      }),
        (t.trimmerSupport = {
          generateTrimmer: function (e) {
            var r = new RegExp('^[^' + e + ']+'),
              n = new RegExp('[^' + e + ']+$');
            return function (i) {
              return typeof i.update == 'function'
                ? i.update(function (s) {
                    return s.replace(r, '').replace(n, '');
                  })
                : i.replace(r, '').replace(n, '');
            };
          },
        });
    };
  });
});
var ne = W((z, ie) => {
  (function (t, e) {
    typeof define == 'function' && define.amd
      ? define(e)
      : typeof z == 'object'
      ? (ie.exports = e())
      : e()(t.lunr);
  })(z, function () {
    return function (t) {
      function e() {
        var r = {
          '[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u5341\u767E\u5343\u4E07\u5104\u5146]':
            'M',
          '[\u4E00-\u9FA0\u3005\u3006\u30F5\u30F6]': 'H',
          '[\u3041-\u3093]': 'I',
          '[\u30A1-\u30F4\u30FC\uFF71-\uFF9D\uFF9E\uFF70]': 'K',
          '[a-zA-Z\uFF41-\uFF5A\uFF21-\uFF3A]': 'A',
          '[0-9\uFF10-\uFF19]': 'N',
        };
        this.chartype_ = [];
        for (var n in r) {
          var i = new RegExp(n);
          this.chartype_.push([i, r[n]]);
        }
        return (
          (this.BIAS__ = -332),
          (this.BC1__ = { HH: 6, II: 2461, KH: 406, OH: -1378 }),
          (this.BC2__ = {
            AA: -3267,
            AI: 2744,
            AN: -878,
            HH: -4070,
            HM: -1711,
            HN: 4012,
            HO: 3761,
            IA: 1327,
            IH: -1184,
            II: -1332,
            IK: 1721,
            IO: 5492,
            KI: 3831,
            KK: -8741,
            MH: -3132,
            MK: 3334,
            OO: -2920,
          }),
          (this.BC3__ = {
            HH: 996,
            HI: 626,
            HK: -721,
            HN: -1307,
            HO: -836,
            IH: -301,
            KK: 2762,
            MK: 1079,
            MM: 4034,
            OA: -1652,
            OH: 266,
          }),
          (this.BP1__ = { BB: 295, OB: 304, OO: -125, UB: 352 }),
          (this.BP2__ = { BO: 60, OO: -1762 }),
          (this.BQ1__ = {
            BHH: 1150,
            BHM: 1521,
            BII: -1158,
            BIM: 886,
            BMH: 1208,
            BNH: 449,
            BOH: -91,
            BOO: -2597,
            OHI: 451,
            OIH: -296,
            OKA: 1851,
            OKH: -1020,
            OKK: 904,
            OOO: 2965,
          }),
          (this.BQ2__ = {
            BHH: 118,
            BHI: -1159,
            BHM: 466,
            BIH: -919,
            BKK: -1720,
            BKO: 864,
            OHH: -1139,
            OHM: -181,
            OIH: 153,
            UHI: -1146,
          }),
          (this.BQ3__ = {
            BHH: -792,
            BHI: 2664,
            BII: -299,
            BKI: 419,
            BMH: 937,
            BMM: 8335,
            BNN: 998,
            BOH: 775,
            OHH: 2174,
            OHM: 439,
            OII: 280,
            OKH: 1798,
            OKI: -793,
            OKO: -2242,
            OMH: -2402,
            OOO: 11699,
          }),
          (this.BQ4__ = {
            BHH: -3895,
            BIH: 3761,
            BII: -4654,
            BIK: 1348,
            BKK: -1806,
            BMI: -3385,
            BOO: -12396,
            OAH: 926,
            OHH: 266,
            OHK: -2036,
            ONN: -973,
          }),
          (this.BW1__ = {
            ',\u3068': 660,
            ',\u540C': 727,
            B1あ: 1404,
            B1同: 542,
            '\u3001\u3068': 660,
            '\u3001\u540C': 727,
            '\u300D\u3068': 1682,
            あっ: 1505,
            いう: 1743,
            いっ: -2055,
            いる: 672,
            うし: -4817,
            うん: 665,
            から: 3472,
            がら: 600,
            こう: -790,
            こと: 2083,
            こん: -1262,
            さら: -4143,
            さん: 4573,
            した: 2641,
            して: 1104,
            すで: -3399,
            そこ: 1977,
            それ: -871,
            たち: 1122,
            ため: 601,
            った: 3463,
            つい: -802,
            てい: 805,
            てき: 1249,
            でき: 1127,
            です: 3445,
            では: 844,
            とい: -4915,
            とみ: 1922,
            どこ: 3887,
            ない: 5713,
            なっ: 3015,
            など: 7379,
            なん: -1113,
            にし: 2468,
            には: 1498,
            にも: 1671,
            に対: -912,
            の一: -501,
            の中: 741,
            ませ: 2448,
            まで: 1711,
            まま: 2600,
            まる: -2155,
            やむ: -1947,
            よっ: -2565,
            れた: 2369,
            れで: -913,
            をし: 1860,
            を見: 731,
            亡く: -1886,
            京都: 2558,
            取り: -2784,
            大き: -2604,
            大阪: 1497,
            平方: -2314,
            引き: -1336,
            日本: -195,
            本当: -2423,
            毎日: -2113,
            目指: -724,
            Ｂ１あ: 1404,
            Ｂ１同: 542,
            '\uFF63\u3068': 1682,
          }),
          (this.BW2__ = {
            '..': -11822,
            11: -669,
            '\u2015\u2015': -5730,
            '\u2212\u2212': -13175,
            いう: -1609,
            うか: 2490,
            かし: -1350,
            かも: -602,
            から: -7194,
            かれ: 4612,
            がい: 853,
            がら: -3198,
            きた: 1941,
            くな: -1597,
            こと: -8392,
            この: -4193,
            させ: 4533,
            され: 13168,
            さん: -3977,
            しい: -1819,
            しか: -545,
            した: 5078,
            して: 972,
            しな: 939,
            その: -3744,
            たい: -1253,
            たた: -662,
            ただ: -3857,
            たち: -786,
            たと: 1224,
            たは: -939,
            った: 4589,
            って: 1647,
            っと: -2094,
            てい: 6144,
            てき: 3640,
            てく: 2551,
            ては: -3110,
            ても: -3065,
            でい: 2666,
            でき: -1528,
            でし: -3828,
            です: -4761,
            でも: -4203,
            とい: 1890,
            とこ: -1746,
            とと: -2279,
            との: 720,
            とみ: 5168,
            とも: -3941,
            ない: -2488,
            なが: -1313,
            など: -6509,
            なの: 2614,
            なん: 3099,
            にお: -1615,
            にし: 2748,
            にな: 2454,
            によ: -7236,
            に対: -14943,
            に従: -4688,
            に関: -11388,
            のか: 2093,
            ので: -7059,
            のに: -6041,
            のの: -6125,
            はい: 1073,
            はが: -1033,
            はず: -2532,
            ばれ: 1813,
            まし: -1316,
            まで: -6621,
            まれ: 5409,
            めて: -3153,
            もい: 2230,
            もの: -10713,
            らか: -944,
            らし: -1611,
            らに: -1897,
            りし: 651,
            りま: 1620,
            れた: 4270,
            れて: 849,
            れば: 4114,
            ろう: 6067,
            われ: 7901,
            を通: -11877,
            んだ: 728,
            んな: -4115,
            一人: 602,
            一方: -1375,
            一日: 970,
            一部: -1051,
            上が: -4479,
            会社: -1116,
            出て: 2163,
            分の: -7758,
            同党: 970,
            同日: -913,
            大阪: -2471,
            委員: -1250,
            少な: -1050,
            年度: -8669,
            年間: -1626,
            府県: -2363,
            手権: -1982,
            新聞: -4066,
            日新: -722,
            日本: -7068,
            日米: 3372,
            曜日: -601,
            朝鮮: -2355,
            本人: -2697,
            東京: -1543,
            然と: -1384,
            社会: -1276,
            立て: -990,
            第に: -1612,
            米国: -4268,
            '\uFF11\uFF11': -669,
          }),
          (this.BW3__ = {
            あた: -2194,
            あり: 719,
            ある: 3846,
            '\u3044.': -1185,
            '\u3044\u3002': -1185,
            いい: 5308,
            いえ: 2079,
            いく: 3029,
            いた: 2056,
            いっ: 1883,
            いる: 5600,
            いわ: 1527,
            うち: 1117,
            うと: 4798,
            えと: 1454,
            '\u304B.': 2857,
            '\u304B\u3002': 2857,
            かけ: -743,
            かっ: -4098,
            かに: -669,
            から: 6520,
            かり: -2670,
            '\u304C,': 1816,
            '\u304C\u3001': 1816,
            がき: -4855,
            がけ: -1127,
            がっ: -913,
            がら: -4977,
            がり: -2064,
            きた: 1645,
            けど: 1374,
            こと: 7397,
            この: 1542,
            ころ: -2757,
            さい: -714,
            さを: 976,
            '\u3057,': 1557,
            '\u3057\u3001': 1557,
            しい: -3714,
            した: 3562,
            して: 1449,
            しな: 2608,
            しま: 1200,
            '\u3059.': -1310,
            '\u3059\u3002': -1310,
            する: 6521,
            '\u305A,': 3426,
            '\u305A\u3001': 3426,
            ずに: 841,
            そう: 428,
            '\u305F.': 8875,
            '\u305F\u3002': 8875,
            たい: -594,
            たの: 812,
            たり: -1183,
            たる: -853,
            '\u3060.': 4098,
            '\u3060\u3002': 4098,
            だっ: 1004,
            った: -4748,
            って: 300,
            てい: 6240,
            てお: 855,
            ても: 302,
            です: 1437,
            でに: -1482,
            では: 2295,
            とう: -1387,
            とし: 2266,
            との: 541,
            とも: -3543,
            どう: 4664,
            ない: 1796,
            なく: -903,
            など: 2135,
            '\u306B,': -1021,
            '\u306B\u3001': -1021,
            にし: 1771,
            にな: 1906,
            には: 2644,
            '\u306E,': -724,
            '\u306E\u3001': -724,
            の子: -1e3,
            '\u306F,': 1337,
            '\u306F\u3001': 1337,
            べき: 2181,
            まし: 1113,
            ます: 6943,
            まっ: -1549,
            まで: 6154,
            まれ: -793,
            らし: 1479,
            られ: 6820,
            るる: 3818,
            '\u308C,': 854,
            '\u308C\u3001': 854,
            れた: 1850,
            れて: 1375,
            れば: -3246,
            れる: 1091,
            われ: -605,
            んだ: 606,
            んで: 798,
            カ月: 990,
            会議: 860,
            入り: 1232,
            大会: 2217,
            始め: 1681,
            市: 965,
            新聞: -5055,
            '\u65E5,': 974,
            '\u65E5\u3001': 974,
            社会: 2024,
            ｶ月: 990,
          }),
          (this.TC1__ = {
            AAA: 1093,
            HHH: 1029,
            HHM: 580,
            HII: 998,
            HOH: -390,
            HOM: -331,
            IHI: 1169,
            IOH: -142,
            IOI: -1015,
            IOM: 467,
            MMH: 187,
            OOI: -1832,
          }),
          (this.TC2__ = {
            HHO: 2088,
            HII: -1023,
            HMM: -1154,
            IHI: -1965,
            KKH: 703,
            OII: -2649,
          }),
          (this.TC3__ = {
            AAA: -294,
            HHH: 346,
            HHI: -341,
            HII: -1088,
            HIK: 731,
            HOH: -1486,
            IHH: 128,
            IHI: -3041,
            IHO: -1935,
            IIH: -825,
            IIM: -1035,
            IOI: -542,
            KHH: -1216,
            KKA: 491,
            KKH: -1217,
            KOK: -1009,
            MHH: -2694,
            MHM: -457,
            MHO: 123,
            MMH: -471,
            NNH: -1689,
            NNO: 662,
            OHO: -3393,
          }),
          (this.TC4__ = {
            HHH: -203,
            HHI: 1344,
            HHK: 365,
            HHM: -122,
            HHN: 182,
            HHO: 669,
            HIH: 804,
            HII: 679,
            HOH: 446,
            IHH: 695,
            IHO: -2324,
            IIH: 321,
            III: 1497,
            IIO: 656,
            IOO: 54,
            KAK: 4845,
            KKA: 3386,
            KKK: 3065,
            MHH: -405,
            MHI: 201,
            MMH: -241,
            MMM: 661,
            MOM: 841,
          }),
          (this.TQ1__ = {
            BHHH: -227,
            BHHI: 316,
            BHIH: -132,
            BIHH: 60,
            BIII: 1595,
            BNHH: -744,
            BOHH: 225,
            BOOO: -908,
            OAKK: 482,
            OHHH: 281,
            OHIH: 249,
            OIHI: 200,
            OIIH: -68,
          }),
          (this.TQ2__ = { BIHH: -1401, BIII: -1033, BKAK: -543, BOOO: -5591 }),
          (this.TQ3__ = {
            BHHH: 478,
            BHHM: -1073,
            BHIH: 222,
            BHII: -504,
            BIIH: -116,
            BIII: -105,
            BMHI: -863,
            BMHM: -464,
            BOMH: 620,
            OHHH: 346,
            OHHI: 1729,
            OHII: 997,
            OHMH: 481,
            OIHH: 623,
            OIIH: 1344,
            OKAK: 2792,
            OKHH: 587,
            OKKA: 679,
            OOHH: 110,
            OOII: -685,
          }),
          (this.TQ4__ = {
            BHHH: -721,
            BHHM: -3604,
            BHII: -966,
            BIIH: -607,
            BIII: -2181,
            OAAA: -2763,
            OAKK: 180,
            OHHH: -294,
            OHHI: 2446,
            OHHO: 480,
            OHIH: -1573,
            OIHH: 1935,
            OIHI: -493,
            OIIH: 626,
            OIII: -4007,
            OKAK: -8156,
          }),
          (this.TW1__ = { につい: -4681, 東京都: 2026 }),
          (this.TW2__ = {
            ある程: -2049,
            いった: -1256,
            ころが: -2434,
            しょう: 3873,
            その後: -4430,
            だって: -1049,
            ていた: 1833,
            として: -4657,
            ともに: -4517,
            もので: 1882,
            一気に: -792,
            初めて: -1512,
            同時に: -8097,
            大きな: -1255,
            対して: -2721,
            社会党: -3216,
          }),
          (this.TW3__ = {
            いただ: -1734,
            してい: 1314,
            として: -4314,
            につい: -5483,
            にとっ: -5989,
            に当た: -6247,
            '\u306E\u3067,': -727,
            '\u306E\u3067\u3001': -727,
            のもの: -600,
            れから: -3752,
            十二月: -2287,
          }),
          (this.TW4__ = {
            '\u3044\u3046.': 8576,
            '\u3044\u3046\u3002': 8576,
            からな: -2348,
            してい: 2958,
            '\u305F\u304C,': 1516,
            '\u305F\u304C\u3001': 1516,
            ている: 1538,
            という: 1349,
            ました: 5543,
            ません: 1097,
            ようと: -4258,
            よると: 5865,
          }),
          (this.UC1__ = { A: 484, K: 93, M: 645, O: -505 }),
          (this.UC2__ = { A: 819, H: 1059, I: 409, M: 3987, N: 5775, O: 646 }),
          (this.UC3__ = { A: -1370, I: 2311 }),
          (this.UC4__ = {
            A: -2643,
            H: 1809,
            I: -1032,
            K: -3450,
            M: 3565,
            N: 3876,
            O: 6646,
          }),
          (this.UC5__ = { H: 313, I: -1238, K: -799, M: 539, O: -831 }),
          (this.UC6__ = { H: -506, I: -253, K: 87, M: 247, O: -387 }),
          (this.UP1__ = { O: -214 }),
          (this.UP2__ = { B: 69, O: 935 }),
          (this.UP3__ = { B: 189 }),
          (this.UQ1__ = {
            BH: 21,
            BI: -12,
            BK: -99,
            BN: 142,
            BO: -56,
            OH: -95,
            OI: 477,
            OK: 410,
            OO: -2422,
          }),
          (this.UQ2__ = { BH: 216, BI: 113, OK: 1759 }),
          (this.UQ3__ = {
            BA: -479,
            BH: 42,
            BI: 1913,
            BK: -7198,
            BM: 3160,
            BN: 6427,
            BO: 14761,
            OI: -827,
            ON: -3212,
          }),
          (this.UW1__ = {
            ',': 156,
            '\u3001': 156,
            '\u300C': -463,
            あ: -941,
            う: -127,
            が: -553,
            き: 121,
            こ: 505,
            で: -201,
            と: -547,
            ど: -123,
            に: -789,
            の: -185,
            は: -847,
            も: -466,
            や: -470,
            よ: 182,
            ら: -292,
            り: 208,
            れ: 169,
            を: -446,
            ん: -137,
            '\u30FB': -135,
            主: -402,
            京: -268,
            区: -912,
            午: 871,
            国: -460,
            大: 561,
            委: 729,
            市: -411,
            日: -141,
            理: 361,
            生: -408,
            県: -386,
            都: -718,
            '\uFF62': -463,
            '\uFF65': -135,
          }),
          (this.UW2__ = {
            ',': -829,
            '\u3001': -829,
            '\u3007': 892,
            '\u300C': -645,
            '\u300D': 3145,
            あ: -538,
            い: 505,
            う: 134,
            お: -502,
            か: 1454,
            が: -856,
            く: -412,
            こ: 1141,
            さ: 878,
            ざ: 540,
            し: 1529,
            す: -675,
            せ: 300,
            そ: -1011,
            た: 188,
            だ: 1837,
            つ: -949,
            て: -291,
            で: -268,
            と: -981,
            ど: 1273,
            な: 1063,
            に: -1764,
            の: 130,
            は: -409,
            ひ: -1273,
            べ: 1261,
            ま: 600,
            も: -1263,
            や: -402,
            よ: 1639,
            り: -579,
            る: -694,
            れ: 571,
            を: -2516,
            ん: 2095,
            ア: -587,
            カ: 306,
            キ: 568,
            ッ: 831,
            三: -758,
            不: -2150,
            世: -302,
            中: -968,
            主: -861,
            事: 492,
            人: -123,
            会: 978,
            保: 362,
            入: 548,
            初: -3025,
            副: -1566,
            北: -3414,
            区: -422,
            大: -1769,
            天: -865,
            太: -483,
            子: -1519,
            学: 760,
            実: 1023,
            小: -2009,
            市: -813,
            年: -1060,
            強: 1067,
            手: -1519,
            揺: -1033,
            政: 1522,
            文: -1355,
            新: -1682,
            日: -1815,
            明: -1462,
            最: -630,
            朝: -1843,
            本: -1650,
            東: -931,
            果: -665,
            次: -2378,
            民: -180,
            気: -1740,
            理: 752,
            発: 529,
            目: -1584,
            相: -242,
            県: -1165,
            立: -763,
            第: 810,
            米: 509,
            自: -1353,
            行: 838,
            西: -744,
            見: -3874,
            調: 1010,
            議: 1198,
            込: 3041,
            開: 1758,
            間: -1257,
            '\uFF62': -645,
            '\uFF63': 3145,
            ｯ: 831,
            ｱ: -587,
            ｶ: 306,
            ｷ: 568,
          }),
          (this.UW3__ = {
            ',': 4889,
            1: -800,
            '\u2212': -1723,
            '\u3001': 4889,
            々: -2311,
            '\u3007': 5827,
            '\u300D': 2670,
            '\u3013': -3573,
            あ: -2696,
            い: 1006,
            う: 2342,
            え: 1983,
            お: -4864,
            か: -1163,
            が: 3271,
            く: 1004,
            け: 388,
            げ: 401,
            こ: -3552,
            ご: -3116,
            さ: -1058,
            し: -395,
            す: 584,
            せ: 3685,
            そ: -5228,
            た: 842,
            ち: -521,
            っ: -1444,
            つ: -1081,
            て: 6167,
            で: 2318,
            と: 1691,
            ど: -899,
            な: -2788,
            に: 2745,
            の: 4056,
            は: 4555,
            ひ: -2171,
            ふ: -1798,
            へ: 1199,
            ほ: -5516,
            ま: -4384,
            み: -120,
            め: 1205,
            も: 2323,
            や: -788,
            よ: -202,
            ら: 727,
            り: 649,
            る: 5905,
            れ: 2773,
            わ: -1207,
            を: 6620,
            ん: -518,
            ア: 551,
            グ: 1319,
            ス: 874,
            ッ: -1350,
            ト: 521,
            ム: 1109,
            ル: 1591,
            ロ: 2201,
            ン: 278,
            '\u30FB': -3794,
            一: -1619,
            下: -1759,
            世: -2087,
            両: 3815,
            中: 653,
            主: -758,
            予: -1193,
            二: 974,
            人: 2742,
            今: 792,
            他: 1889,
            以: -1368,
            低: 811,
            何: 4265,
            作: -361,
            保: -2439,
            元: 4858,
            党: 3593,
            全: 1574,
            公: -3030,
            六: 755,
            共: -1880,
            円: 5807,
            再: 3095,
            分: 457,
            初: 2475,
            別: 1129,
            前: 2286,
            副: 4437,
            力: 365,
            動: -949,
            務: -1872,
            化: 1327,
            北: -1038,
            区: 4646,
            千: -2309,
            午: -783,
            協: -1006,
            口: 483,
            右: 1233,
            各: 3588,
            合: -241,
            同: 3906,
            和: -837,
            員: 4513,
            国: 642,
            型: 1389,
            場: 1219,
            外: -241,
            妻: 2016,
            学: -1356,
            安: -423,
            実: -1008,
            家: 1078,
            小: -513,
            少: -3102,
            州: 1155,
            市: 3197,
            平: -1804,
            年: 2416,
            広: -1030,
            府: 1605,
            度: 1452,
            建: -2352,
            当: -3885,
            得: 1905,
            思: -1291,
            性: 1822,
            戸: -488,
            指: -3973,
            政: -2013,
            教: -1479,
            数: 3222,
            文: -1489,
            新: 1764,
            日: 2099,
            旧: 5792,
            昨: -661,
            時: -1248,
            曜: -951,
            最: -937,
            月: 4125,
            期: 360,
            李: 3094,
            村: 364,
            東: -805,
            核: 5156,
            森: 2438,
            業: 484,
            氏: 2613,
            民: -1694,
            決: -1073,
            法: 1868,
            海: -495,
            無: 979,
            物: 461,
            特: -3850,
            生: -273,
            用: 914,
            町: 1215,
            的: 7313,
            直: -1835,
            省: 792,
            県: 6293,
            知: -1528,
            私: 4231,
            税: 401,
            立: -960,
            第: 1201,
            米: 7767,
            系: 3066,
            約: 3663,
            級: 1384,
            統: -4229,
            総: 1163,
            線: 1255,
            者: 6457,
            能: 725,
            自: -2869,
            英: 785,
            見: 1044,
            調: -562,
            財: -733,
            費: 1777,
            車: 1835,
            軍: 1375,
            込: -1504,
            通: -1136,
            選: -681,
            郎: 1026,
            郡: 4404,
            部: 1200,
            金: 2163,
            長: 421,
            開: -1432,
            間: 1302,
            関: -1282,
            雨: 2009,
            電: -1045,
            非: 2066,
            駅: 1620,
            '\uFF11': -800,
            '\uFF63': 2670,
            '\uFF65': -3794,
            ｯ: -1350,
            ｱ: 551,
            ｸﾞ: 1319,
            ｽ: 874,
            ﾄ: 521,
            ﾑ: 1109,
            ﾙ: 1591,
            ﾛ: 2201,
            ﾝ: 278,
          }),
          (this.UW4__ = {
            ',': 3930,
            '.': 3508,
            '\u2015': -4841,
            '\u3001': 3930,
            '\u3002': 3508,
            '\u3007': 4999,
            '\u300C': 1895,
            '\u300D': 3798,
            '\u3013': -5156,
            あ: 4752,
            い: -3435,
            う: -640,
            え: -2514,
            お: 2405,
            か: 530,
            が: 6006,
            き: -4482,
            ぎ: -3821,
            く: -3788,
            け: -4376,
            げ: -4734,
            こ: 2255,
            ご: 1979,
            さ: 2864,
            し: -843,
            じ: -2506,
            す: -731,
            ず: 1251,
            せ: 181,
            そ: 4091,
            た: 5034,
            だ: 5408,
            ち: -3654,
            っ: -5882,
            つ: -1659,
            て: 3994,
            で: 7410,
            と: 4547,
            な: 5433,
            に: 6499,
            ぬ: 1853,
            ね: 1413,
            の: 7396,
            は: 8578,
            ば: 1940,
            ひ: 4249,
            び: -4134,
            ふ: 1345,
            へ: 6665,
            べ: -744,
            ほ: 1464,
            ま: 1051,
            み: -2082,
            む: -882,
            め: -5046,
            も: 4169,
            ゃ: -2666,
            や: 2795,
            ょ: -1544,
            よ: 3351,
            ら: -2922,
            り: -9726,
            る: -14896,
            れ: -2613,
            ろ: -4570,
            わ: -1783,
            を: 13150,
            ん: -2352,
            カ: 2145,
            コ: 1789,
            セ: 1287,
            ッ: -724,
            ト: -403,
            メ: -1635,
            ラ: -881,
            リ: -541,
            ル: -856,
            ン: -3637,
            '\u30FB': -4371,
            ー: -11870,
            一: -2069,
            中: 2210,
            予: 782,
            事: -190,
            井: -1768,
            人: 1036,
            以: 544,
            会: 950,
            体: -1286,
            作: 530,
            側: 4292,
            先: 601,
            党: -2006,
            共: -1212,
            内: 584,
            円: 788,
            初: 1347,
            前: 1623,
            副: 3879,
            力: -302,
            動: -740,
            務: -2715,
            化: 776,
            区: 4517,
            協: 1013,
            参: 1555,
            合: -1834,
            和: -681,
            員: -910,
            器: -851,
            回: 1500,
            国: -619,
            園: -1200,
            地: 866,
            場: -1410,
            塁: -2094,
            士: -1413,
            多: 1067,
            大: 571,
            子: -4802,
            学: -1397,
            定: -1057,
            寺: -809,
            小: 1910,
            屋: -1328,
            山: -1500,
            島: -2056,
            川: -2667,
            市: 2771,
            年: 374,
            庁: -4556,
            後: 456,
            性: 553,
            感: 916,
            所: -1566,
            支: 856,
            改: 787,
            政: 2182,
            教: 704,
            文: 522,
            方: -856,
            日: 1798,
            時: 1829,
            最: 845,
            月: -9066,
            木: -485,
            来: -442,
            校: -360,
            業: -1043,
            氏: 5388,
            民: -2716,
            気: -910,
            沢: -939,
            済: -543,
            物: -735,
            率: 672,
            球: -1267,
            生: -1286,
            産: -1101,
            田: -2900,
            町: 1826,
            的: 2586,
            目: 922,
            省: -3485,
            県: 2997,
            空: -867,
            立: -2112,
            第: 788,
            米: 2937,
            系: 786,
            約: 2171,
            経: 1146,
            統: -1169,
            総: 940,
            線: -994,
            署: 749,
            者: 2145,
            能: -730,
            般: -852,
            行: -792,
            規: 792,
            警: -1184,
            議: -244,
            谷: -1e3,
            賞: 730,
            車: -1481,
            軍: 1158,
            輪: -1433,
            込: -3370,
            近: 929,
            道: -1291,
            選: 2596,
            郎: -4866,
            都: 1192,
            野: -1100,
            銀: -2213,
            長: 357,
            間: -2344,
            院: -2297,
            際: -2604,
            電: -878,
            領: -1659,
            題: -792,
            館: -1984,
            首: 1749,
            高: 2120,
            '\uFF62': 1895,
            '\uFF63': 3798,
            '\uFF65': -4371,
            ｯ: -724,
            ｰ: -11870,
            ｶ: 2145,
            ｺ: 1789,
            ｾ: 1287,
            ﾄ: -403,
            ﾒ: -1635,
            ﾗ: -881,
            ﾘ: -541,
            ﾙ: -856,
            ﾝ: -3637,
          }),
          (this.UW5__ = {
            ',': 465,
            '.': -299,
            1: -514,
            E2: -32768,
            ']': -2762,
            '\u3001': 465,
            '\u3002': -299,
            '\u300C': 363,
            あ: 1655,
            い: 331,
            う: -503,
            え: 1199,
            お: 527,
            か: 647,
            が: -421,
            き: 1624,
            ぎ: 1971,
            く: 312,
            げ: -983,
            さ: -1537,
            し: -1371,
            す: -852,
            だ: -1186,
            ち: 1093,
            っ: 52,
            つ: 921,
            て: -18,
            で: -850,
            と: -127,
            ど: 1682,
            な: -787,
            に: -1224,
            の: -635,
            は: -578,
            べ: 1001,
            み: 502,
            め: 865,
            ゃ: 3350,
            ょ: 854,
            り: -208,
            る: 429,
            れ: 504,
            わ: 419,
            を: -1264,
            ん: 327,
            イ: 241,
            ル: 451,
            ン: -343,
            中: -871,
            京: 722,
            会: -1153,
            党: -654,
            務: 3519,
            区: -901,
            告: 848,
            員: 2104,
            大: -1296,
            学: -548,
            定: 1785,
            嵐: -1304,
            市: -2991,
            席: 921,
            年: 1763,
            思: 872,
            所: -814,
            挙: 1618,
            新: -1682,
            日: 218,
            月: -4353,
            査: 932,
            格: 1356,
            機: -1508,
            氏: -1347,
            田: 240,
            町: -3912,
            的: -3149,
            相: 1319,
            省: -1052,
            県: -4003,
            研: -997,
            社: -278,
            空: -813,
            統: 1955,
            者: -2233,
            表: 663,
            語: -1073,
            議: 1219,
            選: -1018,
            郎: -368,
            長: 786,
            間: 1191,
            題: 2368,
            館: -689,
            '\uFF11': -514,
            Ｅ２: -32768,
            '\uFF62': 363,
            ｲ: 241,
            ﾙ: 451,
            ﾝ: -343,
          }),
          (this.UW6__ = {
            ',': 227,
            '.': 808,
            1: -270,
            E1: 306,
            '\u3001': 227,
            '\u3002': 808,
            あ: -307,
            う: 189,
            か: 241,
            が: -73,
            く: -121,
            こ: -200,
            じ: 1782,
            す: 383,
            た: -428,
            っ: 573,
            て: -1014,
            で: 101,
            と: -105,
            な: -253,
            に: -149,
            の: -417,
            は: -236,
            も: -206,
            り: 187,
            る: -135,
            を: 195,
            ル: -673,
            ン: -496,
            一: -277,
            中: 201,
            件: -800,
            会: 624,
            前: 302,
            区: 1792,
            員: -1212,
            委: 798,
            学: -960,
            市: 887,
            広: -695,
            後: 535,
            業: -697,
            相: 753,
            社: -507,
            福: 974,
            空: -822,
            者: 1811,
            連: 463,
            郎: 1082,
            '\uFF11': -270,
            Ｅ１: 306,
            ﾙ: -673,
            ﾝ: -496,
          }),
          this
        );
      }
      (e.prototype.ctype_ = function (r) {
        for (var n in this.chartype_)
          if (r.match(this.chartype_[n][0])) return this.chartype_[n][1];
        return 'O';
      }),
        (e.prototype.ts_ = function (r) {
          return r || 0;
        }),
        (e.prototype.segment = function (r) {
          if (r == null || r == null || r == '') return [];
          var n = [],
            i = ['B3', 'B2', 'B1'],
            s = ['O', 'O', 'O'],
            o = r.split('');
          for (d = 0; d < o.length; ++d)
            i.push(o[d]), s.push(this.ctype_(o[d]));
          i.push('E1'),
            i.push('E2'),
            i.push('E3'),
            s.push('O'),
            s.push('O'),
            s.push('O');
          for (
            var u = i[3], l = 'U', a = 'U', f = 'U', d = 4;
            d < i.length - 3;
            ++d
          ) {
            var h = this.BIAS__,
              g = i[d - 3],
              p = i[d - 2],
              m = i[d - 1],
              _ = i[d],
              v = i[d + 1],
              S = i[d + 2],
              x = s[d - 3],
              H = s[d - 2],
              I = s[d - 1],
              B = s[d],
              P = s[d + 1],
              T = s[d + 2];
            (h += this.ts_(this.UP1__[l])),
              (h += this.ts_(this.UP2__[a])),
              (h += this.ts_(this.UP3__[f])),
              (h += this.ts_(this.BP1__[l + a])),
              (h += this.ts_(this.BP2__[a + f])),
              (h += this.ts_(this.UW1__[g])),
              (h += this.ts_(this.UW2__[p])),
              (h += this.ts_(this.UW3__[m])),
              (h += this.ts_(this.UW4__[_])),
              (h += this.ts_(this.UW5__[v])),
              (h += this.ts_(this.UW6__[S])),
              (h += this.ts_(this.BW1__[p + m])),
              (h += this.ts_(this.BW2__[m + _])),
              (h += this.ts_(this.BW3__[_ + v])),
              (h += this.ts_(this.TW1__[g + p + m])),
              (h += this.ts_(this.TW2__[p + m + _])),
              (h += this.ts_(this.TW3__[m + _ + v])),
              (h += this.ts_(this.TW4__[_ + v + S])),
              (h += this.ts_(this.UC1__[x])),
              (h += this.ts_(this.UC2__[H])),
              (h += this.ts_(this.UC3__[I])),
              (h += this.ts_(this.UC4__[B])),
              (h += this.ts_(this.UC5__[P])),
              (h += this.ts_(this.UC6__[T])),
              (h += this.ts_(this.BC1__[H + I])),
              (h += this.ts_(this.BC2__[I + B])),
              (h += this.ts_(this.BC3__[B + P])),
              (h += this.ts_(this.TC1__[x + H + I])),
              (h += this.ts_(this.TC2__[H + I + B])),
              (h += this.ts_(this.TC3__[I + B + P])),
              (h += this.ts_(this.TC4__[B + P + T])),
              (h += this.ts_(this.UQ1__[l + x])),
              (h += this.ts_(this.UQ2__[a + H])),
              (h += this.ts_(this.UQ3__[f + I])),
              (h += this.ts_(this.BQ1__[a + H + I])),
              (h += this.ts_(this.BQ2__[a + I + B])),
              (h += this.ts_(this.BQ3__[f + H + I])),
              (h += this.ts_(this.BQ4__[f + I + B])),
              (h += this.ts_(this.TQ1__[a + x + H + I])),
              (h += this.ts_(this.TQ2__[a + H + I + B])),
              (h += this.ts_(this.TQ3__[f + x + H + I])),
              (h += this.ts_(this.TQ4__[f + H + I + B]));
            var L = 'O';
            h > 0 && (n.push(u), (u = ''), (L = 'B')),
              (l = a),
              (a = f),
              (f = L),
              (u += i[d]);
          }
          return n.push(u), n;
        }),
        (t.TinySegmenter = e);
    };
  });
});
var oe = W(($, se) => {
  (function (t, e) {
    typeof define == 'function' && define.amd
      ? define(e)
      : typeof $ == 'object'
      ? (se.exports = e())
      : e()(t.lunr);
  })($, function () {
    return function (t) {
      t.multiLanguage = function () {
        for (
          var e = Array.prototype.slice.call(arguments),
            r = e.join('-'),
            n = '',
            i = [],
            s = [],
            o = 0;
          o < e.length;
          ++o
        )
          e[o] == 'en'
            ? ((n += '\\w'),
              i.unshift(t.stopWordFilter),
              i.push(t.stemmer),
              s.push(t.stemmer))
            : ((n += t[e[o]].wordCharacters),
              t[e[o]].stopWordFilter && i.unshift(t[e[o]].stopWordFilter),
              t[e[o]].stemmer &&
                (i.push(t[e[o]].stemmer), s.push(t[e[o]].stemmer)));
        var u = t.trimmerSupport.generateTrimmer(n);
        return (
          t.Pipeline.registerFunction(u, 'lunr-multi-trimmer-' + r),
          i.unshift(u),
          function () {
            this.pipeline.reset(),
              this.pipeline.add.apply(this.pipeline, i),
              this.searchPipeline &&
                (this.searchPipeline.reset(),
                this.searchPipeline.add.apply(this.searchPipeline, s));
          }
        );
      };
    };
  });
});
var w = D(ee()),
  le = D(re()),
  fe = D(ne()),
  ce = D(oe());
function J(t) {
  return new Promise((e, r) => {
    (t.oncomplete = t.onsuccess = () => e(t.result)),
      (t.onabort = t.onerror = () => r(t.error));
  });
}
function X(t, e) {
  let r = indexedDB.open(t);
  r.onupgradeneeded = () => r.result.createObjectStore(e);
  let n = J(r);
  return (i, s) => n.then((o) => s(o.transaction(e, i).objectStore(e)));
}
var q;
function ue() {
  return q || (q = X('keyval-store', 'keyval')), q;
}
function ae(t, e = ue()) {
  return e('readonly', (r) => J(r.get(t)));
}
function he(t, e, r = ue()) {
  return r('readwrite', (n) => (n.put(e, t), J(n.transaction)));
}
var G;
async function ve({ lunrLanguages: t }) {
  let { index: e, data: r } = await n();
  (G = (i) => e.search(i).map(({ ref: s }) => r[s])),
    postMessage({ e: 'index-ready' });
  async function n() {
    let i = await fetch('../index.json'),
      s = i.headers.get('etag'),
      o = await i.json(),
      u = X('docfx', 'lunr');
    if (
      (t &&
        t.length > 0 &&
        ((0, ce.default)(w.default),
        (0, le.default)(w.default),
        t.includes('ja') && (0, fe.default)(w.default),
        await Promise.all(t.map(me))),
      s)
    ) {
      let a = JSON.parse((await ae('index', u)) || '{}');
      if (a && a.etag === s) return { index: w.default.Index.load(a), data: o };
    }
    let l = (0, w.default)(function () {
      (w.default.tokenizer.separator = /[\s\-.()]+/),
        this.ref('href'),
        this.field('title', { boost: 50 }),
        this.field('keywords', { boost: 20 }),
        t && t.length > 0 && this.use(w.default.multiLanguage(...t));
      for (let a in o) this.add(o[a]);
    });
    return (
      s &&
        (await he(
          'index',
          JSON.stringify(Object.assign(l.toJSON(), { etag: s })),
          u
        )),
      { index: l, data: o }
    );
  }
}
onmessage = function (t) {
  t.data.q && G
    ? postMessage({ e: 'query-ready', d: G(t.data.q) })
    : t.data.init && ve(t.data.init).catch(console.error);
};
var ge = {
  ar: () => import('./lunr.ar-E7GAKDHK.min.js'),
  da: () => import('./lunr.da-WZCDGCDT.min.js'),
  de: () => import('./lunr.de-7XZMXZII.min.js'),
  du: () => import('./lunr.du-QL47PPFK.min.js'),
  el: () => import('./lunr.el-6EBCVLMJ.min.js'),
  es: () => import('./lunr.es-4YT3M4ID.min.js'),
  fi: () => import('./lunr.fi-TLAOR23U.min.js'),
  fr: () => import('./lunr.fr-G4S422VA.min.js'),
  he: () => import('./lunr.he-J62KVQ3T.min.js'),
  hi: () => import('./lunr.hi-VEBDFZQ2.min.js'),
  hu: () => import('./lunr.hu-ZCNH23T6.min.js'),
  hy: () => import('./lunr.hy-XFQCAWFO.min.js'),
  it: () => import('./lunr.it-43SEBRLN.min.js'),
  ja: () => import('./lunr.ja-6645DQV5.min.js'),
  jp: () => import('./lunr.jp-2KRE2L63.min.js'),
  kn: () => import('./lunr.kn-EGFANKI2.min.js'),
  ko: () => import('./lunr.ko-64QAI4XT.min.js'),
  nl: () => import('./lunr.nl-JVT7LKKG.min.js'),
  no: () => import('./lunr.no-SUO4TTOY.min.js'),
  pt: () => import('./lunr.pt-EAA2HV6I.min.js'),
  ro: () => import('./lunr.ro-U2ICUNNF.min.js'),
  ru: () => import('./lunr.ru-5AQBX5R2.min.js'),
  sa: () => import('./lunr.sa-M7TYHLRJ.min.js'),
  sv: () => import('./lunr.sv-K3GSGWC2.min.js'),
  ta: () => import('./lunr.ta-AKIPBQLC.min.js'),
  te: () => import('./lunr.te-OBAK5FVS.min.js'),
  th: () => import('./lunr.th-LSQ6T65I.min.js'),
  tr: () => import('./lunr.tr-T3KKXR52.min.js'),
  vi: () => import('./lunr.vi-S3VOAA5A.min.js'),
};
async function me(t) {
  if (t !== 'en') {
    let { default: e } = await ge[t]();
    e(w.default);
  }
}
/*! Bundled license information:

lunr/lunr.js:
  (**
   * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9
   * Copyright (C) 2020 Oliver Nightingale
   * @license MIT
   *)
  (*!
   * lunr.utils
   * Copyright (C) 2020 Oliver Nightingale
   *)
  (*!
   * lunr.Set
   * Copyright (C) 2020 Oliver Nightingale
   *)
  (*!
   * lunr.tokenizer
   * Copyright (C) 2020 Oliver Nightingale
   *)
  (*!
   * lunr.Pipeline
   * Copyright (C) 2020 Oliver Nightingale
   *)
  (*!
   * lunr.Vector
   * Copyright (C) 2020 Oliver Nightingale
   *)
  (*!
   * lunr.stemmer
   * Copyright (C) 2020 Oliver Nightingale
   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt
   *)
  (*!
   * lunr.stopWordFilter
   * Copyright (C) 2020 Oliver Nightingale
   *)
  (*!
   * lunr.trimmer
   * Copyright (C) 2020 Oliver Nightingale
   *)
  (*!
   * lunr.TokenSet
   * Copyright (C) 2020 Oliver Nightingale
   *)
  (*!
   * lunr.Index
   * Copyright (C) 2020 Oliver Nightingale
   *)
  (*!
   * lunr.Builder
   * Copyright (C) 2020 Oliver Nightingale
   *)

lunr-languages/lunr.stemmer.support.js:
  (*!
   * Snowball JavaScript Library v0.3
   * http://code.google.com/p/urim/
   * http://snowball.tartarus.org/
   *
   * Copyright 2010, Oleg Mazko
   * http://www.mozilla.org/MPL/
   *)
*/
//# sourceMappingURL=search-worker.min.js.map
